
image:
  repository: public.ecr.aws/aws-observability/aws-for-fluent-bit
  tag: stable
  pullPolicy: IfNotPresent

rbac:
  # rbac.pspEnabled, if `true` a restricted pod security policy is created and used
  pspEnabled: false

serviceAccount:
  create: true
  name: fluent-bit

service:
  ## Allow the service to be exposed for monitoring
  ## For liveness check to work, Health_Check must be set to On
  ## https://docs.fluentbit.io/manual/administration/monitoring
  extraService: |
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_PORT    2020
    Health_Check On 
    HC_Errors_Count 5 
    HC_Retry_Failure_Count 5 
    HC_Period 5 

  parsersFiles:
   - /fluent-bit/parsers/parsers.conf
    
  extraParsers: |
    [PARSER]
      Name   json
      Format json
      Time_Key time
      Time_Format %Y-%m-%dT%H:%M:%S

input:
  enabled: true
  tag: application.*
  path: /var/log/containers/*.log
  parser: json
  db: /var/log/flb_kube.db
  multiline.parser: cri, docker
  memBufLimit: 10MB
  refreshInterval: 10

filter:
  enabled: true
  match: "application.*"
  kubeURL: "https://kubernetes.default.svc.cluster.local:443"
  mergeLog: "On"
  mergeLogKey: "log_processed"
  keepLog: "On"
  k8sLoggingParser: "On"
  k8sLoggingExclude: "On"
  bufferSize: "32k"
  # Uncomment the extraFilters to use Kubelet to get the Metadata instead of talking to API server for large clusters
  # Check this link for more details https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-use-kubelet.html
    # extraFilters: |
    #   Kube_Tag_Prefix     application.var.log.containers.
    #   Labels              Off
    #   Annotations         Off
    #   Use_Kubelet         true
    #   Kubelet_Port        10250
    #   Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    #   Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token


cloudWatchLogs:
  enabled: true
  match: "*"
  region: us-east-1
  logGroupName: "/aws/eks/fluentbit-cloudwatch/cve-application"
   # ArchOps should be replaced with the cluster name
  logFormat: json/emf
  logStreamPrefix: "ArchOps-"
  autoCreateGroup: true

resources:
  limits:
    memory: 250Mi
  requests:
    cpu: 50m
    memory: 50Mi